name: Run global Konveyor CI tests

on:
  workflow_call:
    inputs:
      component_name:
        description: |
          The name of the component being tested, ie konveyor-hub, analyzer-lsp, etc.
          The artifact storing the custom built artifact should be named <component_name>,
          and should contain the file <component_name>.tar inside.
        required: true
        type: string
jobs:
  tackle-golang-api-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout golang api tests repo
        uses: actions/checkout@v3
        with:
          repository: konveyor/go-konveyor-tests
          path: go-konveyor-tests

      - name: Checkout python api tests repo
        uses: actions/checkout@v3
        with:
          repository: konveyor/tackle-api-tests
          path: tackle-api-tests

      # TODO Should DRY this
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.component_name }}
          path: /tmp

      - name: start minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main

      # TODO: Could just load all images found in this artifact so that people can rebuild multiple components if needed
      - name: Load image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker load --input /tmp/${{ inputs.component_name }}.tar

      - name: install konveyor
        uses: konveyor/tackle2-operator/.github/actions/install-tackle@main
        with:
          tackle-image-pull-policy: IfNotPresent

      - name: Expose konveyor UI
        run: |
          kubectl expose deployment tackle-ui --type=NodePort --port=8080 -n konveyor-tackle --name tackle-ui-nodeport
          kubectl expose deployment tackle-hub --type=NodePort --port=8080 -n konveyor-tackle --name tackle-hub-nodeport
          echo "UI_URL=$(minikube service tackle-ui-nodeport -n konveyor-tackle --url)" >>$GITHUB_ENV
          echo "HUB_URL=$(minikube service tackle-hub-nodeport -n konveyor-tackle --url)" >>$GITHUB_ENV
      # end DRY

      - uses: actions/setup-go@v4
        with:
          go-version: 1.18

      - name: Build and run golang API tests
        run: |
          export HUB_BASE_URL=${{ env.HUB_URL }}
          go test -v ./analysis/...
        working-directory: go-konveyor-tests


  tackle-python-api-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout python api tests repo
        uses: actions/checkout@v3
        with:
          repository: konveyor/tackle-api-tests
          path: tackle-api-tests

      # TODO Should DRY this
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.component_name }}
          path: /tmp

      - name: start minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main

      # TODO: Could just load all images found in this artifact so that people can rebuild multiple components if needed
      - name: Load image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker load --input /tmp/${{ inputs.component_name }}.tar

      - name: install konveyor
        uses: konveyor/tackle2-operator/.github/actions/install-tackle@main
        with:
          tackle-image-pull-policy: IfNotPresent

      - name: Expose konveyor UI
        run: |
          kubectl expose deployment tackle-ui --type=NodePort --port=8080 -n konveyor-tackle --name tackle-ui-nodeport
          kubectl expose deployment tackle-hub --type=NodePort --port=8080 -n konveyor-tackle --name tackle-hub-nodeport
          echo "MINIKUBE_IP=$(minikube ip)" >>$GITHUB_ENV
          echo "UI_URL=$(minikube service tackle-ui-nodeport -n konveyor-tackle --url)" >>$GITHUB_ENV
          echo "HUB_URL=$(minikube service tackle-hub-nodeport -n konveyor-tackle --url)" >>$GITHUB_ENV
      # end DRY
      #
      - name: Build and run python API tests
        run: |
          cat <<EOF >config.json
            {"cred_git_username": "test-user", "cred_git_token": "${{ secrets.GITHuB_TOKEN }}"}
          EOF
          docker build -t test .
          docker run -e TACKLE_URL="${{ env.MINIKUBE_IP }}" -e TACKLE_USER="admin" -e TACKLE_PASSWORD="Dog8code" test
        working-directory: tackle-api-tests

  tackle-ui-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        split: [0, 1, 2, 3, 4, 5, 6, 7, 8]
    steps:
      - name: Checkout ui tests repo
        uses: actions/checkout@v3
        with:
          # repository: konveyor/tackle-ui-tests
          repository: fabianvf/tackle-ui-tests
          path: tackle-ui-tests
          ref: support-split

      # TODO Should DRY this
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.component_name }}
          path: /tmp

      - name: start minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main

      # TODO: Could just load all images found in this artifact so that people can rebuild multiple components if needed
      - name: Load image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker load --input /tmp/${{ inputs.component_name }}.tar

      - name: install konveyor
        uses: konveyor/tackle2-operator/.github/actions/install-tackle@main
        with:
          tackle-image-pull-policy: IfNotPresent

      - name: Expose konveyor URLs
        run: |
          kubectl expose deployment tackle-ui --type=NodePort --port=8080 -n konveyor-tackle --name tackle-ui-nodeport
          kubectl expose deployment tackle-hub --type=NodePort --port=8080 -n konveyor-tackle --name tackle-hub-nodeport
          echo "UI_URL=$(minikube service tackle-ui-nodeport -n konveyor-tackle --url)" >>$GITHUB_ENV
          echo "HUB_URL=$(minikube service tackle-hub-nodeport -n konveyor-tackle --url)" >>$GITHUB_ENV
      # end DRY

      - name: Run login tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: tackle-ui-tests
          env: user=admin,pass=password,tackleUrl=${{ env.UI_URL }}
          spec: "cypress/e2e/tests/login.test.ts"

      - name: Run UI tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: tackle-ui-tests
          env: user=admin,pass=Dog8code,tackleUrl="${{ env.UI_URL }}",git_user="fakeuser",git_password="${{ secrets.GITHUB_TOKEN }}",git_key="${{ secrets.GITHUB_TOKEN }}",split="${{ strategy.job-total }}",splitIndex="${{ strategy.job-index }}"
          spec: "**/*.test.ts"

      - name: Upload cypress report  data as artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tackle-ui-test-reports-${{ matrix.split }}
          path: |
            tackle-ui-tests/cypress/reports
            tackle-ui-tests/cypress/screenshots

