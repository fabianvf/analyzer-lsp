name: Run global Konveyor CI tests

on:
  workflow_call:
    inputs:
      component_name:
        description: | 
          The name of the component being tested, ie konveyor-hub, analyzer-lsp, etc.
          The artifact storing the custom built artifact should be named <component_name>,
          and should contain the file <component_name>.tar inside.
        required: true
        type: string
jobs:
  global-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ui tests repo
        uses: actions/checkout@v3
        with:
          repository: konveyor/tackle-ui-tests
          path: tackle-ui-tests
      - name: Checkout golang api tests repo
        uses: actions/checkout@v3
        with:
          repository: konveyor/go-konveyor-tests
          path: go-konveyor-tests
      - name: Checkout python api tests repo
        uses: actions/checkout@v3
        with:
          repository: konveyor/tackle-api-tests
          path: tackle-api-tests
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.component_name }}
          path: /tmp
      - name: start minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main
      - name: Load image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker load --input /tmp/${{ inputs.component_name }}.tar
      - name: install konveyor
        uses: konveyor/tackle2-operator/.github/actions/install-tackle@main
        with:
          tackle-image-pull-policy: IfNotPresent
      - name: Expose konveyor services
        run: |
          kubectl expose deployment tackle-ui --type=NodePort --port=8080 -n konveyor-tackle --name tackle-ui-nodeport
          kubectl expose deployment tackle-hub --type=NodePort --port=8080 -n konveyor-tackle --name tackle-hub-nodeport

      - name: Build and run UI tests
        run: |
          export UI_URL=$(minikube service tackle-ui-nodeport -n konveyor-tackle --url)
          export HUB_URL=$(minikube service tackle-hub-nodeport -n konveyor-tackle --url)

          cat <<EOF >tackle-ui-tests/Dockerfile
            FROM cypress/base:14
            WORKDIR /tests
            COPY . /tests
            RUN npm install . typescript \
             && sed -i -e "s|https://tackle-konveyor-tackle.apps.mig01.cnv-qe.rhcloud.com/|${UI_URL}|g" cypress.config.ts \
             && cat cypress.config.ts

            ENTRYPOINT ["npx", "cypress", "run"]
          EOF

          docker build -t tackle-ui-tests tackle-ui-tests
          docker run  -v $(pwd)/tackle-ui-tests/cypress:/tests/cypress:Z tackle-ui-tests

      - name: Build and run golang API tests
        run: |
          export UI_URL=$(minikube service tackle-ui-nodeport -n konveyor-tackle --url)
          export HUB_URL=$(minikube service tackle-hub-nodeport -n konveyor-tackle --url)

      - name: Build and run python API tests
        run: |
          export UI_URL=$(minikube service tackle-ui-nodeport -n konveyor-tackle --url)
          export HUB_URL=$(minikube service tackle-hub-nodeport -n konveyor-tackle --url)

      # - for test in $tests ; do run test ; done
